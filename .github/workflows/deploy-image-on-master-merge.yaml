name: Deploy Application images when Merging on Master

on:
  # run it on push to the default repository branch
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  REPOSITORY_NAME: ${{ github.repository }}

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: # Define a matrice to build each images and tag it
        include:
          - context: ./python-flask
            image: python-flask
          - context: ./typescript-serverless
            image: typescript-serverless
          - context: ./c#-dotnet
            image: csharp-dotnet
          # - context: ./front
          #   image: typescript-react

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Use Emulator to build images on different architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      # Use BuildX to build the docker images
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set user
        id: user
        run: |
          echo "USER_ID=$(id -u)" >> $GITHUB_OUTPUT
          echo "GROUP_ID=$(id -g)" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}/${{ matrix.image }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      # For each image, build it, tag and push it on registry
      - name: Build image and push to Registry
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64, linux/arm64/v8
          context: ${{matrix.context}}
          build-args: |
            "USER_ID=${{ steps.user.outputs.USER_ID }}"
            "GROUP_ID=${{ steps.user.outputs.GROUP_ID }}"
          file: ${{matrix.context}}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
